{"version":3,"sources":["api.jsx","data/ids.js","segmentboard.jsx","ranking.js","ScoreEntry.jsx","row.jsx","segmentLink.jsx","HeaderTh.jsx","HeaderRow.jsx","data/segments.js","scoreboard.jsx","Page.jsx","App.js","serviceWorker.js","index.js","mystyle.module.css"],"names":["strava","getRequest","access_token","url","axios","request","params","addParam","key","value","addToStrava","args","join","createSegmentLeaderboardClubFull","club","id","createSegmentLeaderboardClub","clubs","urlFunctions","all","Api","year","SegmentBoard","props","useState","segmentPayload","setSegmentPayload","payload","setPayload","segmentId","accessToken","useStoreState","state","useEffect","req","leaderboardRequestCreator","dateRange","then","x","leaderboard","data","entries","useStoreActions","actions","addLeaderboard","segReq","addSegment","fixSharedPosition","rankings","indexed","map","obj","ind","rankPos","grouped","Object","values","groupBy","ranks","flatMap","group","getRanking","allTime","segments","leaderboards","getNoEffortScore","segId","length","curSegments","Array","from","filter","athlete_name","athleteRecord","athleteName","effort","rank","summed","L","xs","reduce","a","b","summedArray","sorted","sort","noEffortsScore","onlyWithEfforts","EmptyScoreEntry","_","ScoreEntry","elapsed_time","start_date_local","clicked","date","substr","split","reverse","elapsedTimeInSeconds","durationInSec","secs","parseInt","Date","setSeconds","getHours","toISOString","secToMMSS","text","scoreClass","1","styles","entry_first","2","entry_second","3","entry_third","entry_normal","borderClass","diffTime","Math","abs","ceil","isSetPastWeek","entry_border","className","Row","React","setClicked","onClick","ranktext_header","ranktext_rank","ranktext_score","createScoreEntry","SegmentLink","segmentName","numAthletes","distance","averageGrade","distanceOneDec","round","prettyAverageGrade","extraInfo","header","href","HeaderTh","child","HeaderRow","segmentRowMapper","allSegments","2462560","name","groups","LÃ¸pekongen","2783427","1557103","5891167","groupEmojis","keys","Scoreboard","storeSegments","athleteEfforts","leaderboardsAllTime","segmentLeaderboards","dataRows","Table","striped","bordered","hover","average_grade","dateRangeTitle","Page","segmentGroupsFromUrl","match","segmentGroup","firstGroupAsDefault","startSegmentGroup","setDateRange","setSegmentGroup","queryParams","qs","location","search","token","setToken","post","client_id","process","grant_type","client_secret","refresh_token","catch","console","log","addAccessToken","useAccesToken","urlSegments","res","JSON","parse","some","isNaN","error","segmentsFromGroup","seg","currentSegments","dateRangeDropwdownItems","k","v","Dropdown","Item","dropdown_item","mapGroupsToItems","group1","restOfGroups","button_row","DropdownButton","button","title","divider","store","createStore","action","acces_token","segment","forEach","entry","curEntries","App","viewport","document","querySelector","content","zoomOutMobile","path","component","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"6MAIMA,EAAS,iCAwBFC,EAAa,SAACC,EAAaC,GAEtC,OAAOC,IAAMC,QAAQF,EAAK,CACxBG,OAAQ,CAACJ,mBAGPK,EAAW,SAACJ,EAAKK,EAAKC,GAAX,gBAAwBN,EAAxB,YAA+BK,EAA/B,YAAsCC,IAEjDC,EAAc,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAaX,EAASW,EAAKC,KAAK,KAAO,KAW9CC,EAAmC,SAACC,EAAMC,GAAP,OAC9CR,EAJ0C,SAACO,EAAMC,GAAP,OAC1CR,EAASG,EAAY,WAAYK,EAAI,eAAgB,UAAWD,GAGvDE,CAA6BF,EAAMC,GAAK,WAAY,K,QChDlDE,EAAiB,OCMxBC,EAAe,CACnBC,IAAKC,EACLC,KF0CkD,SAACP,EAAMC,GAAP,OAClDR,EACEM,EAAiCC,EAAMC,GACvC,aACA,eELWO,EAtCM,SAAAC,GAAU,IAAD,EACgBC,mBAAS,MADzB,mBACrBC,EADqB,KACLC,EADK,OAEEF,mBAAS,MAFX,mBAErBG,EAFqB,KAEZC,EAFY,KAGtBC,EAAYN,EAAMM,UAElBf,EAAOS,EAAMT,MAAQG,EAErBa,EAAcC,aAAc,SAAAC,GAAK,OAAIA,EAAMF,eA4BjD,OA1BAG,qBAAU,WACR,GAAKH,EAAL,CACA,IACMI,GAAMC,EADsBjB,EAAaK,EAAMa,YACftB,EAAMe,GAC5CT,EAAeU,EAAaI,GAAKG,MAAK,SAAAC,GACpCV,EAAW,CACTb,GAAIc,EACJO,UAAWb,EAAMa,UACjBG,YAAaD,EAAEE,KAAKC,gBAGvB,CAACZ,EAAWN,EAAMa,UAAWtB,EAAMgB,IAEtCY,aAAgB,SAAAC,GAAO,OAAIA,EAAQC,iBAAnCF,CAAmDf,GAEnDM,qBAAU,WACR,GAAKH,EAAL,CACA,IAAMe,EFEyBnC,EAAY,WEFVmB,GAEjCT,EAAeU,EAAae,GAAQR,MAAK,SAAAC,GACvCZ,EAAkBY,EAAEE,YAErB,CAACX,EAAWC,IAEfY,aAAgB,SAAAC,GAAO,OAAIA,EAAQG,aAAnCJ,CAA+CjB,GAExC,M,wCC3CHsB,EAAoB,SAAAC,GACtB,IAAMC,EAAUD,EAASE,KAAK,SAACC,EAAIC,GAAL,sBAAkBD,EAAlB,CAAsBE,QAAQD,OAEtDE,EAAUC,OAAOC,OAAOC,kBAAQR,GAAS,SAAAX,GAAC,OAAIA,EAAEoB,UAKtD,OAFqBJ,EAAQK,SAAQ,SAAAC,GAAK,OAAIA,EAAMV,KAD9BG,EACgDO,EAAM,GAAGP,QAD9C,SAAAF,GAAG,sBAASA,EAAT,CAAcE,eAA5B,IAAAA,MA6CXQ,EAvCI,SAACC,EAAQC,EAASC,GAEjC,IAAMC,EAAmB,SAAAC,GAAK,OAAIF,EAAaE,GAAOC,OAAS,GAMzDC,EAAcC,MAAMC,KAAKP,EAASQ,QAAO,SAAAL,GAAK,OAAIF,EAAaE,OAM/DR,EAAQH,OAAOd,QAAQqB,GAASZ,KAJlB,SAAC,EAA6BE,GAA9B,uBAAEoB,EAAF,KAAeC,EAAf,WAAuC,CACnDC,YAAcF,EACdd,MAAQU,EAAYlB,KAAI,SAAAgB,GAAK,OARpBS,EAQgCF,EAAcP,GARvCrC,EAQ8CqC,EAP9DS,EACGA,EAAOC,KADKX,EAAiBpC,GADxB,IAAC8C,EAAO9C,SAalBgD,EAASC,IACXA,IAAUA,IAAS,UACnB,SAAAC,GAAE,OAAIA,EAAGC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,KACjCxB,GAMEyB,EAAc5B,OAAOd,QAAQoC,GAAQ3B,KAAI,uDACzCkC,EAAS,YAAID,GAAaE,MAAK,SAACJ,EAAEC,GAAH,OAASD,EAAEvB,MAAQwB,EAAExB,SAEpD4B,EACFlB,EACSlB,KAAI,SAAAgB,GAAK,OAAID,EAAiBC,MAC9Bc,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAE/BK,EAAkBH,EAAOb,QAAO,SAAAjC,GAAC,OAAIA,EAAEoB,QAAU4B,KAEvD,OAAOvC,EAAkBwC,I,gBCvCvBC,G,MAAkB,SAAAC,GACpB,OAAO,oCAuBLC,EAAa,SAAAnE,GACqDA,EAA7DiD,aADkB,IACJmB,EAA+CpE,EAA/CoE,aAAcC,EAAiCrE,EAAjCqE,iBAAiBhB,EAAgBrD,EAAhBqD,KAAKiB,EAAWtE,EAAXsE,QACnDC,EAAOF,EAAiBG,OAAO,EAAE,IAAIC,MAAM,KAAKC,UAAUrF,KAAK,KAC/DsF,EAvBQ,SAAAC,GACd,IAAMC,EAAOC,SAASF,EAAc,IAC9BL,EAAO,IAAIQ,KAAK,MAEtB,OADAR,EAAKS,WAAYH,GAEbN,EAAKU,WAAa,EAChBV,EAAKW,cAAcV,OAAO,GAAI,GAC9BD,EAAKW,cAAcV,OAAO,GAAI,GAgBPW,CAAUf,GACjCgB,EAAI,UAAMT,EAAN,cAAgCtB,EAAhC,KAOJgC,EALe,CACjBC,EAAEC,IAAOC,YACTC,EAAEF,IAAOG,aACTC,EAAEJ,IAAOK,aAEmBvC,IAASkC,IAAOM,aAI1CC,EAtBY,SAAAvB,GAElB,IAAMwB,EAAWC,KAAKC,IAAI,IAAIlB,KAAS,IAAIA,KAAKR,IAEhD,OADiByB,KAAKE,KAAKH,EAAQ,OACjB,EAgBKI,CAAc9B,GAEH,WAAOkB,IAAOa,cAAiB,GACjE,OACI,wBAAIC,UAAWhB,EAAaS,GACvBV,EACA,IACD,8BAAOd,GAAWC,KCtBf+B,EA5BH,SAAAtG,GAAU,IAAD,EACauG,IAAMtG,UAAS,GAD5B,mBACVqE,EADU,KACDkC,EADC,mBAG0CxG,EAAMZ,KAHhD,GAGV+D,EAHU,KAGEhB,EAHF,KAGQe,EAHR,KAGsBV,EAHtB,KAG+BV,EAH/B,KAKjB,OACI,wBAAI2E,QAAS,kBAAMD,GAAYlC,KAC3B,4BACI,2BAAInB,GACH,IACY,IAAZrB,GAAiB,eACL,IAAZA,GAAiB,eACL,IAAZA,GAAiB,gBAEtB,wBAAIuE,UAAWd,IAAOmB,iBAClB,0BAAML,UAAWd,IAAOoB,eACnB7E,EAAQ,GAEb,0BAAMuE,UAAWd,IAAOqB,gBAAxB,YACUzE,EADV,OAIHW,MAAMC,KAAKP,GAAUb,KAAK,SAACgB,EAAMd,GAAP,ODvBP,SAACZ,EAAKqD,EAAQzC,GAC1C,IAAM7B,EAAK,eAAOiB,EAAP,CAAYqD,YACvB,OAAOrD,EACD,kBAAC,EAAD,eAAYhC,IAAK4C,GAAS7B,IAC1B,kBAAC,EAAD,CAAiBf,IAAK4C,ICoBhBgF,CAAiB3D,EAAcP,GAAO2B,EAAQzC,QCN/CiF,EAjBK,SAAA9G,GAAU,IACnBM,EAAuEN,EAAvEM,UAAUyG,EAA6D/G,EAA7D+G,YAAaC,EAAgDhH,EAAhDgH,YAAaC,EAAmCjH,EAAnCiH,SAAUC,EAAyBlH,EAAzBkH,aAAc5C,EAAWtE,EAAXsE,QAG7D6C,EAAiBnB,KAAKoB,MAAQH,EAAW,IAAQ,IAAM,GAEvDI,EAAqBH,EACrBI,EAAS,aAFQH,EAAiB,KAEzB,YAA2BE,EAA3B,cAAmDL,EAAnD,KACf,OACI,uBAAIX,UAAWd,IAAOgC,OAClBC,KAZO,mCAYYlH,GAElByG,EAHL,IAGmBzC,GAAWgD,ICFvBG,EAXE,SAAAzH,GAAU,IAChB0H,EAAS1H,EAAT0H,MAEP,OACQ,wBAAIrB,UAAWd,IAAOgC,QACjBG,EACA,MCQFC,EAdG,SAAA3H,GAAU,IACjB4H,EAAoB5H,EAApB4H,iBADgB,EAGOrB,IAAMtG,UAAS,GAHtB,mBAGhBqE,EAHgB,KAGPkC,EAHO,KAKvB,OACI,wBAAIC,QAAS,kBAAMD,GAAYlC,KAC3B,kBAAC,EAAD,CAAUoD,MAAO,SACjB,kBAAC,EAAD,CAAUA,MAAO,cAChBE,EAAiBtD,GAAS3C,KAAI,SAAAZ,GAAC,OAAI,kBAAC,EAAD,CAAU9B,IAAK8B,EAAEf,MAAMM,UAAWoH,MAAO3G,SCb5E8G,EAAc,CACzBC,QAAS,CACPtI,GAAI,QACJuI,KAAM,0BACNC,OAAQ,CAAEC,gBAAY,IAExBC,QAAS,CACP1I,GAAI,QACJuI,KAAM,0BACNC,OAAQ,CACNC,gBAAY,IAGhBE,QAAS,CACP3I,GAAI,QACJuI,KAAM,gCACNC,OAAQ,CACNC,gBAAY,IAGhBG,QAAS,CACP5I,GAAI,QACJuI,KAAM,4BACNC,OAAQ,CACNC,gBAAY,KAOLI,EAAc,CACzBJ,gBAHW,8CAMAD,EAAShG,OAAOsG,KAAKD,GCwBnBE,EAlDI,SAAAvI,GAAU,IACnBwC,EAAwBxC,EAAxBwC,SAAU3B,EAAcb,EAAda,UAEZJ,EAAQD,aAAc,SAAAC,GAAK,OAAIA,KAE/B+H,EAAgB/H,EAAM+B,SACtBD,EAAU9B,EAAMgI,eAAe5H,GAC/B6H,EAAsBjI,EAAMkI,oBAAoB9H,GA0BhD+H,EAFUtG,EAAWC,EAASC,EAAUkG,GAErB/G,KAAI,WAAkCE,GAAlC,IAAGsB,EAAH,EAAGA,YAAahB,EAAhB,EAAgBA,MAAOL,EAAvB,EAAuBA,QAAvB,OAC3B,kBAAC,EAAD,CACE7C,IAAKkE,EACL/D,KAAM,CAAC+D,EAAahB,EAAOI,EAAQY,GAAcX,EAAUV,QAI/D,OACE,kBAAC+G,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,kBAAC,EAAD,CAAWpB,iBAlCQ,SAAAtD,GAAO,OAC9B9B,EAASb,KAAI,SAAAgB,GACX,IAAMqE,EAAc0B,EAAoB/F,GACpC+F,EAAoB/F,GAAOC,OAC3B,GAEEmE,GADayB,EAAc7F,IAAU6F,EAAc7F,GAAOoF,KAC5CF,EAAYlF,IAAUkF,EAAYlF,GAAOoF,MAC7D,OACE,kBAAC,EAAD,CACE9I,IAAK0D,EACLrC,UAAWqC,EACXqE,YAAaA,EACbD,YAAaA,EACbE,SAAUuB,EAAc7F,IAAU6F,EAAc7F,GAAOsE,SACvDC,aACEsB,EAAc7F,IAAU6F,EAAc7F,GAAOsG,cAE/C3E,QAASA,WAmBb,+BAAQsE,K,gBC1CRM,EAAiB,CACrBtJ,IAAK,qBACLE,KAAM,WA8FOqJ,EA3FF,SAAAnJ,GACX,IAAMoJ,EAAuBpJ,EAAMqJ,MAAMtK,OAAOuK,aAC1CC,EAAsBvB,EAAO,GAC7BwB,EAAoBnB,EAAYe,GAClCA,EACAG,EALgB,EAOchD,IAAMtG,SAAS,OAP7B,mBAObY,EAPa,KAOF4I,EAPE,OAQoBlD,IAAMtG,SAASuJ,GARnC,mBAQbF,EARa,KAQCI,EARD,KAUdC,EAAcC,QAAS5J,EAAM6J,SAASC,SXrBjB,WAAO,IAAD,EAERvD,IAAMtG,SAAS,MAFP,mBAE1B8J,EAF0B,KAEpBC,EAFoB,KAIjCzD,IAAM7F,WAAW,WACf7B,IAAMoL,KAAKxL,EAAO,cAAe,CAC/ByL,UAAWC,QACXC,WAAW,gBACXC,cAAeF,2CACfG,cAAeH,6CACdrJ,MAAK,SAAAC,GACNiJ,EAASjJ,EAAEE,KAAKtC,iBAEjB4L,OAAM,SAAAxJ,GAAC,OAAIyJ,QAAQC,IAAI1J,QAE1B,IAEAI,aAAgB,SAAAC,GAAO,OAAIA,EAAQsJ,iBAAnCvJ,CAAmD4I,GWMnDY,GAEA,IAAIC,EAAc,GAClB,IACE,IAAMC,EAAMC,KAAKC,MAAMpB,EAAYnH,UACnCoI,EAAeC,EAAIG,KAAKC,OAAe,GAANJ,EACjC,MAAOK,IAIT,IASMC,EAAoBnJ,OAAOC,OAAO4F,GACrC7E,QAAO,SAAAoI,GAAG,OAAIA,EAAIpD,OAAOsB,MACzB3H,KAAI,SAAAZ,GAAC,OAAIA,EAAEvB,MAER6L,EACJT,EAAYhI,OAAS,EAAIgI,EAAcO,EAEnCG,EAA0BtJ,OAAOd,QAAQgI,GAAgBvH,KAC7D,mCAAE4J,EAAF,KAAKC,EAAL,YACE,kBAACC,EAAA,EAASC,KAAV,CACEzM,IAAKsM,EACLlF,UAAWd,IAAOoG,cAClBlF,QAAS,SAAAvC,GAAC,OAAIuF,EAAa8B,KAE1BC,MAKDI,EAAmB,SAAA5D,GAAM,OAC7BA,EAAOrG,KAAI,SAAAU,GAAK,OACd,kBAACoJ,EAAA,EAASC,KAAV,CACEzM,IAAKoD,EACLgE,UAAWd,IAAOoG,cAClBlF,QAAS,kBAAMiD,EAAgBrH,KAE9BA,EAAQ,IAAMgG,EAAYhG,QAzDb,EA6DcL,OAAOsG,KAAKD,GA7D1B,iBA6DbwD,EA7Da,KA6DFC,EA7DE,WA+DpB,OACE,6BACE,yBAAKzF,UAAWd,IAAOwG,YACrB,kBAACC,EAAA,EAAD,CACE3F,UAAWd,IAAO0G,OAClBC,MACE,mBAAqB5C,EAAe,IAAMjB,EAAYiB,IAGvDsC,EAAiB,CAACC,IACnB,kBAACJ,EAAA,EAAD,CAAiBpF,UAAWd,IAAO4G,UAClCP,EAAiBE,IAEpB,kBAACE,EAAA,EAAD,CACE3F,UAAWd,IAAO0G,OAClBC,MAAO,aAAehD,EAAerI,IAEpCyK,IAIL,kBAAC,EAAD,CAAY9I,SAAU6I,EAAiBxK,UAAWA,IAEjDwK,EAAgB1J,KAhEM,SAACgB,EAAOd,GAAR,OACzB,kBAAC,EAAD,CACE5C,IAAK4C,EACLtC,KAAMoK,EAAYpK,KAClBsB,UAAWA,EACXP,UAAWqC,S,gBCvCXyJ,EAAQC,YAAY,CACxB9L,YAAY,KACZkI,eAAgB,CACd7I,IAAK,GACLE,KAAM,IAER6I,oBAAqB,CACnB/I,IAAK,GACLE,KAAM,IAER0C,SAAU,GAEVkI,eAAgB4B,aAAO,SAAC7L,EAAO8L,GAC1BA,IACD9L,EAAMF,YAAcgM,MAExBhL,WAAY+K,aAAO,SAAC7L,EAAO+L,GACzB,GAAKA,EAAL,CADqC,IAE7BzE,EAAkCyE,EAAlCzE,KAAMd,EAA4BuF,EAA5BvF,SAAUgC,EAAkBuD,EAAlBvD,cACxBxI,EAAM+B,SAASgK,EAAQhN,IAAM,CAAEuI,OAAMd,WAAUgC,qBAEjD5H,eAAgBiL,aAAO,SAAC7L,EAAOL,GAC7B,GAAKA,EAAL,CAEA,IAAME,EAAYF,EAAQZ,GAC1BiB,EAAMkI,oBAAoBvI,EAAQS,WAAWP,GAC3CF,EAAQY,YAUVZ,EAAQY,YAAYyL,SARH,SAAAC,GACfA,EAAMF,QAAUlM,EAEhB,IAAMqM,EACJlM,EAAMgI,eAAerI,EAAQS,WAAW6L,EAAMzJ,eAAiB,GACjE0J,EAAWD,EAAMF,SAAWE,EAC5BjM,EAAMgI,eAAerI,EAAQS,WAAW6L,EAAMzJ,cAAgB0J,WA+BrDC,EAdH,WAEV,OAboB,WACpB,IAAMC,EAAWC,SAASC,cAAc,yBAEpCF,IACFA,EAASG,QAAU,kBACnBH,EAASG,QAAU,sBAOrBC,GAEE,kBAAC,IAAD,CAAeb,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,KAAM,iBAAkBC,UAAWhE,IAC1C,kBAAC,IAAD,CAAO+D,KAAM,IAAKC,UAAWhE,QCnDnBiE,QACW,cAA7BC,OAAOxD,SAASyD,UAEe,UAA7BD,OAAOxD,SAASyD,UAEhBD,OAAOxD,SAASyD,SAASjE,MACvB,2DCZNkE,IAASC,OAAO,kBAAC,EAAD,MAASV,SAASW,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9M,MAAK,SAAA+M,GACjCA,EAAaC,iB,kBElInBC,EAAOC,QAAU,CAAC,YAAc,6BAA6B,aAAe,8BAA8B,YAAc,6BAA6B,aAAe,8BAA8B,WAAa,4BAA4B,OAAS,wBAAwB,YAAc,6BAA6B,cAAgB,+BAA+B,eAAiB,gCAAgC,OAAS,wBAAwB,GAAK,oBAAoB,MAAQ,uBAAuB,QAAU,yBAAyB,aAAe,gC","file":"static/js/main.e73e70cd.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport React from \"react\";\r\n\r\nconst strava = \"https://www.strava.com/api/v3/\";\r\n\r\nexport const useAccesToken = () => {\r\n\r\n  const [token,setToken] = React.useState(null);\r\n\r\n  React.useEffect( () => {\r\n    axios.post(strava+\"oauth/token\", {\r\n      client_id: process.env.REACT_APP_CLIENT_ID,\r\n      grant_type:\"refresh_token\",\r\n      client_secret: process.env.REACT_APP_CLIENT_SECRET,\r\n      refresh_token: process.env.REACT_APP_REFRESH_TOKEN\r\n    }).then(x => {\r\n      setToken(x.data.access_token);\r\n    })\r\n    .catch(x => console.log(x));\r\n    },\r\n  []);\r\n\r\n  useStoreActions(actions => actions.addAccessToken)(token);\r\n}\r\n\r\n\r\n\r\nexport const getRequest = (access_token,url) => {\r\n\r\n  return axios.request(url, {\r\n    params: {access_token}\r\n  });\r\n}\r\nconst addParam = (url, key, value) => `${url}&${key}=${value}`;\r\n\r\nconst addToStrava = (...args) => strava + args.join(\"/\") + \"?\";\r\n\r\nexport const createAthlete = id => addToStrava(\"athletes\", id);\r\nexport const createSegment = id => addToStrava(\"segments\", id);\r\n\r\nexport const createSegmentLeaderboard = id =>\r\n  addToStrava(\"segments\", id, \"leaderboard\");\r\n\r\nexport const createSegmentLeaderboardClub = (club, id) =>\r\n  addParam(addToStrava(\"segments\", id, \"leaderboard\"), \"club_id\", club);\r\n\r\nexport const createSegmentLeaderboardClubFull = (club, id) =>\r\n  addParam(createSegmentLeaderboardClub(club, id), \"per_page\", 50);\r\n\r\nexport const createSegmentLeaderboardClubThisYear = (club, id) =>\r\n  addParam(\r\n    createSegmentLeaderboardClubFull(club, id),\r\n    \"date_range\",\r\n    \"this_year\"\r\n  );\r\n","export const clubs = { bliss: 597247 };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as Api from \"./api\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport * as qs from \"query-string\";\r\nimport { clubs } from \"./data/ids\";\r\n\r\nconst urlFunctions = {\r\n  all: Api.createSegmentLeaderboardClubFull,\r\n  year: Api.createSegmentLeaderboardClubThisYear\r\n};\r\n\r\nconst SegmentBoard = props => {\r\n  const [segmentPayload, setSegmentPayload] = useState(null);\r\n  const [payload, setPayload] = useState(null);\r\n  const segmentId = props.segmentId;\r\n\r\n  const club = props.club || clubs.bliss;\r\n\r\n  const accessToken = useStoreState(state => state.accessToken);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    const leaderboardRequestCreator = urlFunctions[props.dateRange];\r\n    const req = leaderboardRequestCreator(club, segmentId);\r\n    Api.getRequest(accessToken, req).then(x => {\r\n      setPayload({\r\n        id: segmentId,\r\n        dateRange: props.dateRange,\r\n        leaderboard: x.data.entries\r\n      });\r\n    });\r\n  }, [segmentId, props.dateRange, club, accessToken]);\r\n\r\n  useStoreActions(actions => actions.addLeaderboard)(payload);\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    const segReq = Api.createSegment(segmentId);\r\n\r\n    Api.getRequest(accessToken, segReq).then(x => {\r\n      setSegmentPayload(x.data);\r\n    });\r\n  }, [segmentId, accessToken]);\r\n\r\n  useStoreActions(actions => actions.addSegment)(segmentPayload);\r\n\r\n  return null;\r\n};\r\n\r\nexport default SegmentBoard;\r\n","import * as L from 'partial.lenses';\nimport {groupBy} from \"lodash\";\n\nconst fixSharedPosition = rankings => {\n    const indexed = rankings.map( (obj,ind) => ({...obj,rankPos:ind} ));\n\n    const grouped = Object.values(groupBy(indexed, x => x.ranks));\n\n    const setNewRankPos = rankPos => obj => ({...obj, rankPos})\n    const fixedRankPos = grouped.flatMap(group => group.map(setNewRankPos(group[0].rankPos)));\n\n    return fixedRankPos;\n}\n\nconst getRanking = (allTime,segments,leaderboards) => {\n\n    const getNoEffortScore = segId => leaderboards[segId].length + 1;\n\n    const getRank = (effort,segmentId) => {\n        if(!effort) return getNoEffortScore(segmentId);\n        return effort.rank;\n    }\n    const curSegments = Array.from(segments.filter(segId => leaderboards[segId]));\n\n    const createRanks = ([athlete_name,athleteRecord],ind) => ({\n            athleteName : athlete_name,\n            ranks : curSegments.map(segId => getRank(athleteRecord[segId],segId))\n    });\n    const ranks = Object.entries(allTime).map(createRanks);\n\n\n    const summed = L.modify(\n        L.compose(L.values,\"ranks\"), \n        xs => xs.reduce((a, b) => a + b, 0),\n        ranks\n    );\n\n\n    \n\n    const summedArray = Object.entries(summed).map(([key, value]) => value);\n    const sorted = [...summedArray].sort((a,b) => a.ranks - b.ranks)\n\n    const noEffortsScore = \n        curSegments\n                .map(segId => getNoEffortScore(segId))\n                .reduce((a, b) => a + b, 0);\n\n    const onlyWithEfforts = sorted.filter(x => x.ranks !== noEffortsScore);\n\n    return fixSharedPosition(onlyWithEfforts);\n}\n\nexport default getRanking;","import React from \"react\";\r\nimport styles from \"./mystyle.module.css\";\r\nimport diff from \"jest-diff\";\r\n\r\nexport const createScoreEntry = (data,clicked,ind) => {\r\n    const props = {...data,clicked};\r\n    return data \r\n        ? <ScoreEntry key={ind} {...props} /> \r\n        : <EmptyScoreEntry key={ind}/>;\r\n}\r\n\r\nconst EmptyScoreEntry = _ => {\r\n    return <td>  </td>;\r\n}\r\n\r\nconst secToMMSS = durationInSec => { \r\n    const secs = parseInt(durationInSec,10);\r\n    const date = new Date(null);\r\n    date.setSeconds( secs );\r\n    return (\r\n        date.getHours() > 1 //means that it lasts more than 1 hour\r\n        ? date.toISOString().substr(11, 8) //\"add\" hh:\r\n        : date.toISOString().substr(14, 5) //skip hh:\r\n    )\r\n\r\n    ;\r\n}\r\n\r\nconst isSetPastWeek = date => {\r\n    \r\n    const diffTime = Math.abs(new Date() - new Date(date));\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n    return diffDays < 7;\r\n}\r\n\r\nconst ScoreEntry = props => {\r\n    const {athlete_name, elapsed_time, start_date_local,rank,clicked} = props;\r\n    const date = start_date_local.substr(0,10).split(\"-\").reverse().join(\".\");\r\n    const elapsedTimeInSeconds = secToMMSS(elapsed_time);\r\n    const text = `${elapsedTimeInSeconds} (#${rank})`;\r\n\r\n    const entryClasses = {\r\n        1:styles.entry_first,\r\n        2:styles.entry_second,\r\n        3:styles.entry_third\r\n    };\r\n    const scoreClass = entryClasses[rank] || styles.entry_normal;\r\n    \r\n    const wasSetPastWeek = isSetPastWeek(start_date_local);\r\n\r\n    const borderClass = wasSetPastWeek ? ` ${styles.entry_border}` : \"\";\r\n    return (\r\n        <td className={scoreClass + borderClass}> \r\n            {text} \r\n            {' '}\r\n            <span>{clicked && date}</span>\r\n        </td>\r\n    )\r\n};\r\n\r\nexport default ScoreEntry;","\nimport React from \"react\";\nimport styles from \"./mystyle.module.css\";\nimport {createScoreEntry} from \"./ScoreEntry\";\n\nconst Row = props => {\n    const [clicked, setClicked] = React.useState(false);\n\n    const [athleteName,ranks,athleteRecord,segments,rankPos] = props.args;\n\n    return (\n        <tr onClick={() => setClicked(!clicked)}> \n            <td> \n                <b>{athleteName}</b>\n                {\" \"}\n                {rankPos === 0 && \"ð¥\" }\n                {rankPos === 1 && \"ð¥\" }\n                {rankPos === 2 && \"ð¥\" }\n            </td>\n            <td className={styles.ranktext_header}>\n                <span className={styles.ranktext_rank} >\n                    {rankPos+1}\n                </span>\n                <span className={styles.ranktext_score}>\n                    {` (${ranks})`}\n                </span>\n            </td>\n            {Array.from(segments).map( (segId,ind) => \n                createScoreEntry(athleteRecord[segId],clicked,ind))}\n        </tr>\n    );\n};\n\nexport default Row;","import React from \"react\";\nimport styles from \"./mystyle.module.css\";\n\nconst segmentUrl = \"https://www.strava.com/segments/\";\n    \nconst SegmentLink = props => {\n    const {segmentId,segmentName, numAthletes, distance, averageGrade, clicked} = props;\n    \n\n    const distanceOneDec = Math.round( (distance / 1000) * 10) / 10;\n    const prettyDistance = distanceOneDec + \"km\";\n    const prettyAverageGrade = averageGrade;\n    const extraInfo = ` - ${prettyDistance} ${prettyAverageGrade}% (${numAthletes})`;\n    return (\n        <a  className={styles.header}\n            href={segmentUrl + segmentId}\n        > \n            {segmentName} {clicked && extraInfo}\n        </a> \n    );\n};\n\nexport default SegmentLink;","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\nimport styles from \"./mystyle.module.css\"\n\nconst HeaderTh = props => {\n    const {child} = props;\n    \n    return (\n            <th className={styles.header}>\n                {child}\n                {\" \"}\n            </th> \n    );\n};\n\nexport default HeaderTh;","import React from \"react\";\n// import styles from \"./mystyle.module.css\"\nimport HeaderTh from \"./HeaderTh\";\n\nconst HeaderRow = props => {\n    const {segmentRowMapper} = props;\n    \n    const [clicked, setClicked] = React.useState(false); \n    \n    return (\n        <tr onClick={() => setClicked(!clicked)}>\n            <HeaderTh child={\"Navn\"}/>\n            <HeaderTh child={\"# (Poeng)\"}/>\n            {segmentRowMapper(clicked).map(x => <HeaderTh key={x.props.segmentId} child={x}/>)}      \n        </tr>\n    );\n};\n\nexport default HeaderRow;","export const allSegments = {\r\n  2462560: {\r\n    id: 2462560,\r\n    name: \"Sognsvann rundt medsols\",\r\n    groups: { LÃ¸pekongen: 1 }\r\n  },\r\n  2783427: {\r\n    id: 2783427,\r\n    name: \"Sognsvann rundt motsols\",\r\n    groups: {\r\n      LÃ¸pekongen: 1\r\n    }\r\n  },\r\n  1557103: {\r\n    id: 1557103,\r\n    name: \"Vettakollen opp langs eggen 2\",\r\n    groups: {\r\n      LÃ¸pekongen: 1\r\n    }\r\n  },\r\n  5891167: {\r\n    id: 5891167,\r\n    name: \"Sognsvann-UllevÃ¥lseter\",\r\n    groups: {\r\n      LÃ¸pekongen: 1\r\n    }\r\n  }\r\n};\r\n\r\nconst runE = \"ðð»ââï¸\";\r\n\r\nexport const groupEmojis = {\r\n  LÃ¸pekongen: runE\r\n};\r\n\r\nexport const groups = Object.keys(groupEmojis);\r\n","import React from \"react\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport getRanking from \"./ranking\";\r\nimport Row from \"./row\";\r\nimport SegmentLink from \"./segmentLink\";\r\nimport HeaderRow from \"./HeaderRow\";\r\nimport { allSegments } from \"./data/segments\";\r\n\r\nconst Scoreboard = props => {\r\n  const { segments, dateRange } = props;\r\n\r\n  const state = useStoreState(state => state);\r\n\r\n  const storeSegments = state.segments;\r\n  const allTime = state.athleteEfforts[dateRange];\r\n  const leaderboardsAllTime = state.segmentLeaderboards[dateRange];\r\n\r\n  const segmentRowMapper = clicked =>\r\n    segments.map(segId => {\r\n      const numAthletes = leaderboardsAllTime[segId]\r\n        ? leaderboardsAllTime[segId].length\r\n        : \"\";\r\n      const backupName = storeSegments[segId] && storeSegments[segId].name;\r\n      const segmentName = allSegments[segId] && allSegments[segId].name;\r\n      return (\r\n        <SegmentLink\r\n          key={segId}\r\n          segmentId={segId}\r\n          numAthletes={numAthletes}\r\n          segmentName={segmentName}\r\n          distance={storeSegments[segId] && storeSegments[segId].distance}\r\n          averageGrade={\r\n            storeSegments[segId] && storeSegments[segId].average_grade\r\n          }\r\n          clicked={clicked}\r\n        />\r\n      );\r\n    });\r\n\r\n  const ranking = getRanking(allTime, segments, leaderboardsAllTime);\r\n\r\n  const dataRows = ranking.map(({ athleteName, ranks, rankPos }, ind) => (\r\n    <Row\r\n      key={athleteName}\r\n      args={[athleteName, ranks, allTime[athleteName], segments, rankPos]}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <HeaderRow segmentRowMapper={segmentRowMapper} />\r\n      </thead>\r\n      <tbody>{dataRows}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","import React from \"react\";\r\nimport SegmentBoard from \"./segmentboard\";\r\nimport Scoreboard from \"./scoreboard\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownDivider from \"react-bootstrap/Dropdown\";\r\nimport styles from \"./mystyle.module.css\";\r\nimport { groupEmojis, groups } from \"./data/segments\";\r\nimport { allSegments } from \"./data/segments\";\r\nimport * as qs from \"query-string\";\r\nimport { useAccesToken } from \"./api\";\r\n\r\nconst dateRangeTitle = {\r\n  all: \"Gjennom alle tider\",\r\n  year: \"I Ã¥r\"\r\n};\r\n\r\nconst Page = props => {\r\n  const segmentGroupsFromUrl = props.match.params.segmentGroup;\r\n  const firstGroupAsDefault = groups[0];\r\n  const startSegmentGroup = groupEmojis[segmentGroupsFromUrl]\r\n    ? segmentGroupsFromUrl\r\n    : firstGroupAsDefault;\r\n\r\n  const [dateRange, setDateRange] = React.useState(\"all\");\r\n  const [segmentGroup, setSegmentGroup] = React.useState(startSegmentGroup);\r\n\r\n  const queryParams = qs.parse(props.location.search);\r\n\r\n  useAccesToken();\r\n\r\n  let urlSegments = [];\r\n  try {\r\n    const res = JSON.parse(queryParams.segments);\r\n    urlSegments = !res.some(isNaN) ? res : [];\r\n  } catch (error) {\r\n    // console.log(error);\r\n  }\r\n\r\n  const createSegmentBoard = (segId, ind) => (\r\n    <SegmentBoard\r\n      key={ind}\r\n      club={queryParams.club}\r\n      dateRange={dateRange}\r\n      segmentId={segId}\r\n    />\r\n  );\r\n\r\n  const segmentsFromGroup = Object.values(allSegments)\r\n    .filter(seg => seg.groups[segmentGroup])\r\n    .map(x => x.id);\r\n\r\n  const currentSegments =\r\n    urlSegments.length > 0 ? urlSegments : segmentsFromGroup;\r\n\r\n  const dateRangeDropwdownItems = Object.entries(dateRangeTitle).map(\r\n    ([k, v]) => (\r\n      <Dropdown.Item\r\n        key={k}\r\n        className={styles.dropdown_item}\r\n        onClick={_ => setDateRange(k)}\r\n      >\r\n        {v}\r\n      </Dropdown.Item>\r\n    )\r\n  );\r\n\r\n  const mapGroupsToItems = groups =>\r\n    groups.map(group => (\r\n      <Dropdown.Item\r\n        key={group}\r\n        className={styles.dropdown_item}\r\n        onClick={() => setSegmentGroup(group)}\r\n      >\r\n        {group + \" \" + groupEmojis[group]}\r\n      </Dropdown.Item>\r\n    ));\r\n\r\n  const [group1, ...restOfGroups] = Object.keys(groupEmojis);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.button_row}>\r\n        <DropdownButton\r\n          className={styles.button}\r\n          title={\r\n            \"Segmentgruppe : \" + segmentGroup + \" \" + groupEmojis[segmentGroup]\r\n          }\r\n        >\r\n          {mapGroupsToItems([group1])}\r\n          <DropdownDivider className={styles.divider} />\r\n          {mapGroupsToItems(restOfGroups)}\r\n        </DropdownButton>\r\n        <DropdownButton\r\n          className={styles.button}\r\n          title={\"Periode : \" + dateRangeTitle[dateRange]}\r\n        >\r\n          {dateRangeDropwdownItems}\r\n        </DropdownButton>\r\n      </div>\r\n\r\n      <Scoreboard segments={currentSegments} dateRange={dateRange} />\r\n\r\n      {currentSegments.map(createSegmentBoard)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\nimport Page from \"./Page\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { StoreProvider, createStore, action } from \"easy-peasy\";\n\nconst store = createStore({\n  accessToken:null,\n  athleteEfforts: {\n    all: {},\n    year: {}\n  },\n  segmentLeaderboards: {\n    all: {},\n    year: {}\n  },\n  segments: {},\n\n  addAccessToken: action((state, acces_token) => {\n    if(acces_token)\n      state.accessToken = acces_token;\n  }),\n  addSegment: action((state, segment) => {\n    if (!segment) return;\n    const { name, distance, average_grade } = segment;\n    state.segments[segment.id] = { name, distance, average_grade };\n  }),\n  addLeaderboard: action((state, payload) => {\n    if (!payload) return;\n\n    const segmentId = payload.id;\n    state.segmentLeaderboards[payload.dateRange][segmentId] =\n      payload.leaderboard;\n\n    const addEntry = entry => {\n      entry.segment = segmentId;\n\n      const curEntries =\n        state.athleteEfforts[payload.dateRange][entry.athlete_name] || {};\n      curEntries[entry.segment] = entry;\n      state.athleteEfforts[payload.dateRange][entry.athlete_name] = curEntries;\n    };\n    payload.leaderboard.forEach(addEntry);\n  })\n});\n\nconst zoomOutMobile = () => {\n  const viewport = document.querySelector('meta[name=\"viewport\"]');\n\n  if (viewport) {\n    viewport.content = \"initial-scale=1\";\n    viewport.content = \"width=device-width\";\n  }\n};\n\n\n\nconst App = () => {\n  zoomOutMobile();\n  return (\n    <StoreProvider store={store}>\n      <Router>\n        <Switch>\n          <Route path={\"/:segmentGroup\"} component={Page} />\n          <Route path={\"/\"} component={Page} />\n        </Switch>\n      </Router>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry_first\":\"mystyle_entry_first__GZGLw\",\"entry_second\":\"mystyle_entry_second__13TpZ\",\"entry_third\":\"mystyle_entry_third__3fLIV\",\"entry_normal\":\"mystyle_entry_normal__34dj6\",\"button_row\":\"mystyle_button_row__17d_B\",\"button\":\"mystyle_button__1ALQQ\",\"ranktext_td\":\"mystyle_ranktext_td__1tHWr\",\"ranktext_rank\":\"mystyle_ranktext_rank__2OPnq\",\"ranktext_score\":\"mystyle_ranktext_score__1CaNx\",\"header\":\"mystyle_header__1abc1\",\"th\":\"mystyle_th__1KFdi\",\"score\":\"mystyle_score__3Csax\",\"divider\":\"mystyle_divider__1Tx-L\",\"entry_border\":\"mystyle_entry_border__1ohS_\"};"],"sourceRoot":""}